version: 2
jobs:
  test:
#    machine:
#      - environment:
#        DB_HOST: 127.0.0.1
#        DB_DATABASE: hanagacha
#        DB_USERNAME: ubuntu
#        DB_PASSWORD:
#
#      php:
#        version: 7.1.0
#    database:
#      - override:
#        php artisan migrate --env=testing
#    test:
#      - override:
#        vendor/bin/phpunit tests/gacha/* -d memory_limit=512M
    machine: true
    steps:
      - checkout
      - run:
          name: Build
          command: docker-compose build
      - run:
          name: Tests
          command: docker-compose run php /bin/bash -c "pwd && ls -al"
#          command: docker-compose run php /bin/bash -c "vendor/bin/phpunit tests/gacha -d memory_limit=512M"
#          command: docker-compose run php /bin/bash -c './vendor/bin/phpunit tests/gacha/* -d memory_limit=512M'

  deploy:
    branchs:
      - master
    docker:
      - image: circleci/php:7.1-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "8a:f4:64:2c:0e:42:87:c5:3c:cf:f4:4d:ae:77:df:45"
      - run:
          name: Start ssh-keyscan
          command: |
            ssh-keyscan ${HOST_NAME_AZURE} >> ~/.ssh/known_hosts
      - deploy:
          name: Start Azure Deploy:Git Clone
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh ${USER_NAME_AZURE}@${HOST_NAME_AZURE} "/bin/bash" < ./clone.sh
            fi
      - deploy:
          name: Start Azure Deploy:Deployer
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh ${USER_NAME_AZURE}@${HOST_NAME_AZURE} "cd /var/www/html/workspace/;composer install;sudo dep deploy develop;"
            fi
      - deploy:
          name: Migrate
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ssh ${USER_NAME_AZURE}@${HOST_NAME_AZURE} "cd /var/www/html/web/current/;php artisan migrate --force;"
            fi
workflows:
  version: 2
  test_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
